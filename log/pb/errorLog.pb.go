// Code generated by protoc-gen-go. DO NOT EDIT.
// source: errorLog.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorLog struct {
	ServiceId            int32    `protobuf:"varint,1,opt,name=ServiceId" json:"ServiceId,omitempty"`
	ServiceTypeId        int32    `protobuf:"varint,2,opt,name=ServiceTypeId" json:"ServiceTypeId,omitempty"`
	ProjectAddress       string   `protobuf:"bytes,3,opt,name=ProjectAddress" json:"ProjectAddress,omitempty"`
	Msg                  string   `protobuf:"bytes,4,opt,name=Msg" json:"Msg,omitempty"`
	Trace                string   `protobuf:"bytes,5,opt,name=Trace" json:"Trace,omitempty"`
	AdditionalInfo       string   `protobuf:"bytes,6,opt,name=AdditionalInfo" json:"AdditionalInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorLog) Reset()         { *m = ErrorLog{} }
func (m *ErrorLog) String() string { return proto.CompactTextString(m) }
func (*ErrorLog) ProtoMessage()    {}
func (*ErrorLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_errorLog_2b29516a8e4bb18f, []int{0}
}
func (m *ErrorLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorLog.Unmarshal(m, b)
}
func (m *ErrorLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorLog.Marshal(b, m, deterministic)
}
func (dst *ErrorLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorLog.Merge(dst, src)
}
func (m *ErrorLog) XXX_Size() int {
	return xxx_messageInfo_ErrorLog.Size(m)
}
func (m *ErrorLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorLog.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorLog proto.InternalMessageInfo

func (m *ErrorLog) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ErrorLog) GetServiceTypeId() int32 {
	if m != nil {
		return m.ServiceTypeId
	}
	return 0
}

func (m *ErrorLog) GetProjectAddress() string {
	if m != nil {
		return m.ProjectAddress
	}
	return ""
}

func (m *ErrorLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ErrorLog) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

func (m *ErrorLog) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

type AddErrorLogResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddErrorLogResponse) Reset()         { *m = AddErrorLogResponse{} }
func (m *AddErrorLogResponse) String() string { return proto.CompactTextString(m) }
func (*AddErrorLogResponse) ProtoMessage()    {}
func (*AddErrorLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_errorLog_2b29516a8e4bb18f, []int{1}
}
func (m *AddErrorLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddErrorLogResponse.Unmarshal(m, b)
}
func (m *AddErrorLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddErrorLogResponse.Marshal(b, m, deterministic)
}
func (dst *AddErrorLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddErrorLogResponse.Merge(dst, src)
}
func (m *AddErrorLogResponse) XXX_Size() int {
	return xxx_messageInfo_AddErrorLogResponse.Size(m)
}
func (m *AddErrorLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddErrorLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddErrorLogResponse proto.InternalMessageInfo

func (m *AddErrorLogResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *AddErrorLogResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ErrorLog)(nil), "pb.ErrorLog")
	proto.RegisterType((*AddErrorLogResponse)(nil), "pb.AddErrorLogResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Logger service

type LoggerClient interface {
	AddErrorLog(ctx context.Context, in *ErrorLog, opts ...grpc.CallOption) (*AddErrorLogResponse, error)
}

type loggerClient struct {
	cc *grpc.ClientConn
}

func NewLoggerClient(cc *grpc.ClientConn) LoggerClient {
	return &loggerClient{cc}
}

func (c *loggerClient) AddErrorLog(ctx context.Context, in *ErrorLog, opts ...grpc.CallOption) (*AddErrorLogResponse, error) {
	out := new(AddErrorLogResponse)
	err := grpc.Invoke(ctx, "/pb.Logger/AddErrorLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Logger service

type LoggerServer interface {
	AddErrorLog(context.Context, *ErrorLog) (*AddErrorLogResponse, error)
}

func RegisterLoggerServer(s *grpc.Server, srv LoggerServer) {
	s.RegisterService(&_Logger_serviceDesc, srv)
}

func _Logger_AddErrorLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ErrorLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).AddErrorLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Logger/AddErrorLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).AddErrorLog(ctx, req.(*ErrorLog))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Logger",
	HandlerType: (*LoggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddErrorLog",
			Handler:    _Logger_AddErrorLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "errorLog.proto",
}

func init() { proto.RegisterFile("errorLog.proto", fileDescriptor_errorLog_2b29516a8e4bb18f) }

var fileDescriptor_errorLog_2b29516a8e4bb18f = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x6b, 0x42, 0x33, 0x6a, 0x91, 0x51, 0x74, 0x11, 0x0f, 0x25, 0x88, 0xf4, 0x94,
	0x83, 0x82, 0x67, 0x83, 0x78, 0x28, 0x54, 0x90, 0xb5, 0x2f, 0xd0, 0x64, 0xc7, 0x10, 0x29, 0x99,
	0x65, 0x36, 0x0a, 0xbe, 0xa0, 0xcf, 0x25, 0xbb, 0x49, 0xd1, 0x8a, 0xb7, 0xfd, 0xbe, 0x1d, 0xfe,
	0xe1, 0x1f, 0x98, 0x92, 0x08, 0xcb, 0x92, 0xeb, 0xdc, 0x0a, 0x77, 0x8c, 0x23, 0x5b, 0x66, 0x5f,
	0x11, 0x4c, 0x1e, 0x07, 0x8d, 0x97, 0x90, 0xbe, 0x90, 0x7c, 0x34, 0x15, 0x2d, 0x8c, 0x8a, 0x66,
	0xd1, 0x3c, 0xd6, 0x3f, 0x02, 0xaf, 0xe0, 0x68, 0x80, 0xd5, 0xa7, 0xf5, 0x13, 0xa3, 0x30, 0xb1,
	0x2b, 0xf1, 0x1a, 0xa6, 0xcf, 0xc2, 0x6f, 0x54, 0x75, 0x85, 0x31, 0x42, 0xce, 0xa9, 0xf1, 0x2c,
	0x9a, 0xa7, 0xfa, 0x8f, 0xc5, 0x63, 0x18, 0x3f, 0xb9, 0x5a, 0xed, 0x87, 0x4f, 0xff, 0xc4, 0x53,
	0x88, 0x57, 0xb2, 0xae, 0x48, 0xc5, 0xc1, 0xf5, 0xe0, 0xf3, 0x0a, 0x63, 0x9a, 0xae, 0xe1, 0x76,
	0xbd, 0x59, 0xb4, 0xaf, 0xac, 0x92, 0x3e, 0x6f, 0xd7, 0x66, 0x0f, 0x70, 0x52, 0x18, 0xb3, 0xad,
	0xa2, 0xc9, 0x59, 0x6e, 0x1d, 0xe1, 0x19, 0x24, 0x42, 0xee, 0x7d, 0xd3, 0x85, 0x3e, 0x13, 0x3d,
	0x90, 0x5f, 0x16, 0xae, 0x11, 0x4a, 0xa4, 0xba, 0x87, 0x9b, 0x7b, 0x48, 0x96, 0x5c, 0xd7, 0x24,
	0x78, 0x07, 0x07, 0xbf, 0xe2, 0xf0, 0x30, 0xb7, 0x65, 0xbe, 0xa5, 0x8b, 0x73, 0x4f, 0xff, 0x6c,
	0xcb, 0xf6, 0xca, 0x24, 0x9c, 0xf6, 0xf6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x87, 0x17, 0xe4,
	0x6c, 0x01, 0x00, 0x00,
}
